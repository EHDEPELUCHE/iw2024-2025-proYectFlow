name: Maven Build, SonarCloud Analysis and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Clonar el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Amazon Corretto JDK 21
    - name: Set up JDK 21 (Amazon Corretto)
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '21'

    # 3. Iniciar la base de datos con Docker
    - name: Start MySQL Database with Docker
      run: |
        docker run -ti --rm -d --name mysql_local -p 3306:3306 alvareitor01/desarrollo_iw
        sleep 10
        docker ps

    # 4. Análisis con SonarCloud
    - name: Run SonarCloud Analysis
      run: mvn clean verify sonar:sonar
      working-directory: ./source/proYectFlow
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_PROJECT_KEY: EHDEPELUCHE_iw2024-2025-proYectFlow
        SONAR_ORGANIZATION: ehdepeluche

    # 5. Construir el proyecto con Maven
    - name: Build with Maven
      run: mvn clean package
      working-directory: ./source/proYectFlow
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    # 6. Configurar SSH
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 7. Verificar y agregar la clave del host de Azure a known_hosts
    - name: Add Azure Host to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan proyectflow.westeurope.cloudapp.azure.com >> ~/.ssh/known_hosts

    # 8. Desplegar el JAR en la máquina virtual de Azure
    - name: Deploy to Azure VM
      run: |
        scp ./source/proYectFlow/target/*.jar DaniFlow@proyectflow.westeurope.cloudapp.azure.com:/home/DaniFlow/proYectFlow/proyectflow.jar
        ssh DaniFlow@proyectflow.westeurope.cloudapp.azure.com << 'EOF'
          sudo -n systemctl stop proyectflow || true
          sudo -n systemctl start proyectflow
        EOF
